apiVersion: apps/v1
kind: Deployment
metadata:
  name: trtis-resnet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trtis-resnet
  template:
    metadata:
      labels:
        app: trtis-resnet
    spec:
      schedulerName: trtis-scheduler      
      initContainers:
      - name: trtis-loader
        image: seldonio/trtis-loader:0.1
        args: ["--model-src","/models/testing/resnet50_netdef","--trtis-model-repo","/models/$(NODE_NAME)", "--trtis-host" ,"$(NODE_IP)"]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - name: my-volume
          mountPath: "/models"
      containers:
      - name: model
        image: seldonio/trtis-proxy:0.1
        command: ["/trtis-proxy"]
        args: ["--model-src","/models/testing/resnet50_netdef","--trtis-model-repo","/models/$(NODE_NAME)", "--trtis-host" ,"$(NODE_IP)"]
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: my-volume
          mountPath: "/models"
        resources:
          limits:
            seldon.io/trtis-gpu-mem: 400Mi          
      volumes:	 
      - name: my-volume
        persistentVolumeClaim:
          claimName: ls-pv-claim
